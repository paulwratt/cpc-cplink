0000                             ; 
0000                             ; Write up to 255 bytes from the FIFO ignoring FIFO status
0000                             ; flag states. To improve speed, bytes are transferred in
0000                             ; blocks of 4 until fewer than 4 remain.
0000                             ; 
0000                             ; Entry:
0000                             ;  max      IX+127/6 - Param 2: MAX bytes to write
0000                             ;  @rxptr   IX+125/4 - Param 1: ptr to first byte
0000                             ;  ret addr IX+123/2
0000                             ;  old IX   IX+121/0
0000                             ;  vec ptr  IX+119/8
0000                             ;  f        IX+117/6 - local var init to 0 to return result
0000   DD 66 7D               LD   h,(ix+125)   ; HL points to RX buffer
0003   DD 6E 7C               LD   l,(ix+124)   
0006   1E 00                  LD   e,00   ; e = sent byte count
0008   01 80 FD               LD   bc,0xfd80   ; point to data register directly
000B   DD 7E 7F               LD   a,(ix+127)   ; get high byte of count
000E   E6 FF                  AND   0xFF   ; check if non-zero
0010   28 07                  JR   z,next   ; get low byte if zero
0012   17                     RLA      ; check sign bit
0013   38 2C                  JR   c,end   ; exit if -ve
0015   3E FF                  LD   a,255   ; else set a=max bytes=255
0017   18 07                  JR   start   
0019                NEXT:        
0019   DD 7E 7E               LD   a,(ix+126)   ; Max bytes (1..255)
001C   E6 FF                  AND   0xff   ; check for zero and exit early
001E   28 21                  JR   Z,end   
0020                START:       
0020   5F                     LD   e,a   ; Copy max bytes to e
0021   CB 3F                  SRL   A   ; turn A into block of 4 counter
0023   CB 3F                  SRL   A   
0025   28 14                  JR   z,TOP1   ; if <8 jump to single byte loop
0027                TOP8:        
0027   ED A2                  INI      ; (HL) <-IN(BC), HL++, B--
0029   04                     INC   b   ; restore B
002A   ED A2                  INI      
002C   04                     INC   b   
002D   ED A2                  INI      
002F   04                     INC   b   
0030   ED A2                  INI      
0032   04                     INC   b   
0033   3D                     DEC   a   ; dec block counter
0034   20 F1                  JR   nz,top8   ; repeat if not done
0036   7B                     LD   a,e   ; get byte count mod 4 - remaining bytes
0037   E6 03                  AND   0x03   
0039   28 06                  JR   z,end   ; skip to end if none left
003B                TOP1:        ; else finish up one byte at a time
003B   ED A2                  INI      ; (HL) <-IN(BC), HL++, B--
003D   04                     INC   b   ; restore B
003E   3D                     DEC   a   ; dec byte counter
003F   20 FA                  JR   nz,top1   
0041                END:         
0041   DD 73 74               LD   (ix+116),e   ; write bytes transferred ready to exit
